<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Pallet, DevOps for the JVM -- News</title>
 <link href="http://palletops.com/pallet/doc/changes/atom.xml" rel="self"/>
 <link href="http://palletops.com/pallet/doc/changes"/>
 <updated>2014-06-19T01:04:43+00:00</updated>
 <id>http://palletops.com/palletdoc/changes</id>
 <author>
   <name>Antoni Batchelli</name>
   <email>tbatchelli@palletops.com</email>
 </author>
 
 <entry>
   <title>Stevedore script reference updated</title>
   <link href="http://palletops.com/pallet/doc/changes/stevedore-script-reference-updated/"/>
   <updated>2012-01-31T00:00:00+00:00</updated>
   <id>http://palletops.com/pallet/doc/changes/stevedore-script-reference-updated/</id>
   <content type="html">&lt;p&gt;We have updated the &lt;a href=&quot;http://palletops.com/doc/reference/script/&quot; title=&quot;Stevedore script reference&quot;&gt;Shell Script&lt;/a&gt; section in the
&lt;a href=&quot;http://palletops.com/doc/reference/&quot; title=&quot;Pallet reference documentation&quot;&gt;Reference Documentation&lt;/a&gt; to accurately reflect current
&lt;a href=&quot;https://github.com/pallet/stevedore/&quot; title=&quot;Stevedore source repository&quot;&gt;Stevedore&lt;/a&gt; (version 0.6 and higher) usage.&lt;/p&gt;

&lt;p&gt;The major change documented is the use of &lt;code&gt;with-script-language&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://palletops.com/doc/reference/script/&quot; title=&quot;Stevedore script reference&quot;&gt;Read the script reference here&lt;/a&gt;.&lt;/p&gt;
</content>
   <author>
     <name></name>
     <uri></uri>
   </author>
 </entry>
 
 <entry>
   <title>Node-List How-To Created</title>
   <link href="http://palletops.com/pallet/doc/changes/node-list-howto-created/"/>
   <updated>2012-01-31T00:00:00+00:00</updated>
   <id>http://palletops.com/pallet/doc/changes/node-list-howto-created/</id>
   <content type="html">&lt;p&gt;A How-To covering the &lt;a href=&quot;http://palletops.com/doc/how-tos/using-pallet-with-existing-servers&quot; title=&quot;Pallet Node-List How-To&quot;&gt;use of node-lists&lt;/a&gt; has been created.&lt;/p&gt;

&lt;p&gt;This is an introduction to the &lt;a href=&quot;http://palletops.com/pallet/api/0.6/pallet.compute.node-list.html&quot; title=&quot;Pallet Node-List Provider API&quot;&gt;&lt;code&gt;node-list&lt;/code&gt;&lt;/a&gt; provider, and explains how to
use existing server racks or virtual machines with pallet.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://palletops.com/doc/how-tos/using-pallet-with-existing-servers&quot; title=&quot;Pallet Node-List How-To&quot;&gt;Read the how-to here&lt;/a&gt;.&lt;/p&gt;
</content>
   <author>
     <name></name>
     <uri></uri>
   </author>
 </entry>
 
 <entry>
   <title>Added FAQ and How-To sections</title>
   <link href="http://palletops.com/pallet/doc/changes/added-faq-and-how-to-sections/"/>
   <updated>2012-01-22T00:00:00+00:00</updated>
   <id>http://palletops.com/pallet/doc/changes/added-faq-and-how-to-sections/</id>
   <content type="html">&lt;p&gt;We have just added two more documentation sections:
&lt;a href=&quot;http://palletops.com/doc/faq&quot;&gt;FAQ&lt;/a&gt; and
&lt;a href=&quot;http://palletops.com/doc/how-tos&quot;&gt;how-tos&lt;/a&gt;. These sections also have
their own RSS feeds if you want to keep track of changes in these
sections.&lt;/p&gt;

&lt;p&gt;These sections are currently empty, and content is coming soon.&lt;/p&gt;
</content>
   <author>
     <name></name>
     <uri></uri>
   </author>
 </entry>
 
 <entry>
   <title>Logging section updated for SLF4J</title>
   <link href="http://palletops.com/pallet/doc/changes/logging-setup-updated/"/>
   <updated>2012-01-21T00:00:00+00:00</updated>
   <id>http://palletops.com/pallet/doc/changes/logging-setup-updated/</id>
   <content type="html">&lt;p&gt;We have updated the
&lt;a href=&quot;http://palletops.com/doc/reference/logging/&quot;&gt;Logging&lt;/a&gt; section in the
&lt;a href=&quot;http://palletops.com/doc/reference/logging&quot;&gt;Reference Documentation&lt;/a&gt;
to reflect the fact that Pallet has its logging subsystem from using
&lt;a href=&quot;http://logging.apache.org/log4j/1.2/&quot;&gt;log4j&lt;/a&gt; to using
&lt;a href=&quot;http://www.slf4j.org/&quot;&gt;SLF4J&lt;/a&gt;. This move allows the configuration of
many different logging subsystems. By default, the logging library
used is now &lt;a href=&quot;http://http://logback.qos.ch/&quot;&gt;logback&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://palletops.com/doc/reference/logging/&quot;&gt;Read the full article here.&lt;/a&gt;&lt;/p&gt;
</content>
   <author>
     <name></name>
     <uri></uri>
   </author>
 </entry>
 
 <entry>
   <title>Added a Way to Track Documentation Changes</title>
   <link href="http://palletops.com/pallet/doc/changes/track-doc-changes/"/>
   <updated>2012-01-18T00:00:00+00:00</updated>
   <id>http://palletops.com/pallet/doc/changes/track-doc-changes/</id>
   <content type="html">&lt;p&gt;We have added a way to track significant documentation changes. From
now on, every time a document is added or significantly updated, we
will post an update on the &lt;a href=&quot;/doc/changes&quot;&gt;Documentation Changes&lt;/a&gt; page
and the corresponding &lt;a href=&quot;/doc/changes/atom.xml&quot;&gt;RSS feed&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We hope this will help you keep up to date with the documentation.&lt;/p&gt;
</content>
   <author>
     <name></name>
     <uri></uri>
   </author>
 </entry>
 
 
 <entry>
   <title>FAQ: FAQ Using AWS with the jclouds provider</title>
   <link href="http://palletops.com/pallet/doc/faq/jclouds-aws/"/>
   <updated>2012-08-29T00:00:00+00:00</updated>
   <id>http://palletops.com/pallet/doc/faq/jclouds-aws/</id>
   <content type="html">&lt;h1&gt;How do I run a node on an availability zone or region outside of us-east-1?&lt;/h1&gt;

&lt;p&gt;To run a node outside of us-east-1, you will need to specify a &lt;code&gt;:location-id&lt;/code&gt; in
your node-spec. You will also need to ensure that your AMI is available in the
specified location.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;ss&quot;&gt;:image&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:image-id&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;us-east-1/ami-1aad5273&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;:location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:location-id&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;us-east-1a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;How do I run a node in a VPC?&lt;/h1&gt;

&lt;p&gt;To run a node inside a VPC, you will need to specify a &lt;code&gt;:subnet-id&lt;/code&gt; in
your node-spec.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;ss&quot;&gt;:location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:subnet-id&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;subxxxx&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Why does it take 20mins to list images?&lt;/h1&gt;

&lt;p&gt;When jclouds starts, it requests a list of images from the provider. On AWS,
this list is very long.  If you have DEBUG level logging to the console for
jclouds.wire, then this takes a very long time. The solutions is to set the log
level for jclouds.wire to INFO or WARN.&lt;/p&gt;

&lt;h1&gt;How can I make jclouds see my AMIs?&lt;/h1&gt;

&lt;p&gt;Since AWS has a very long list of images, jclouds filters the image lists by
owner in order to improve performance. You can add your owner id to the list of
owners it uses, by specifying it in your service configuration in
&lt;code&gt;~/.pallet/config.clj&lt;/code&gt; or &lt;code&gt;~/.pallet/services/*&lt;/code&gt;, or when calling
&lt;code&gt;pallet.compute/compute-service&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;ss&quot;&gt;:jclouds.ec2.ami-query&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;owner-id=137112412989&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;How do I run my node in previously existing security groups?&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;ss&quot;&gt;:network&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:security-groups&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my-security-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;How do I turn on Cloudwatch Monitoring when creating a node?&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;ss&quot;&gt;:qos&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:enable-monitoring&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also
&lt;a href=&quot;http://www.jclouds.org/documentation/userguide/using-ec2/&quot;&gt;Image Filters&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;How can I tell jclouds which credentials to use on bootstrap?&lt;/h1&gt;

&lt;p&gt;Normally jclouds can find the login credentials based on the information
provided in the AMI image.  For less frequently used images, it sometimes fails
to determine the image&amp;#39;s login credentials, and you have to supply the relevant
information in the template.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;node-spec&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;....&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:image&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:override-login-user&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;ubuntu&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Simple options here are &lt;code&gt;:override-login-user&lt;/code&gt;, &lt;code&gt;:override-login-password&lt;/code&gt;,
&lt;code&gt;:override-login-private-key&lt;/code&gt;, and &lt;code&gt;:override-authenticate-sudo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Alternatively, you can pass a &lt;code&gt;org.jclouds.domain.LoginCredentials&lt;/code&gt; object with
&lt;code&gt;:override-login-credentials&lt;/code&gt; to set all of the above at once.  See
&lt;code&gt;org.jclouds.domain.LoginCredentials/builder&lt;/code&gt; to construct an instance.&lt;/p&gt;

&lt;h1&gt;How can I mount EBS volumes?&lt;/h1&gt;

&lt;p&gt;EBS volumes can be mounted using the &lt;code&gt;:block-device-mappings&lt;/code&gt; argument in your
&lt;code&gt;node-spec&lt;/code&gt; under the &lt;code&gt;:hardware&lt;/code&gt; key.  The argument is a sequence of jcloud&amp;#39;s
BlockDeviceMapping objects.  At the moment, there is no clojure wrapper for
creating these, but you can use the following jcloud&amp;#39;s constructors, which are
static classes nested in &lt;code&gt;org.jclouds.ec2.domain.BlockDeviceMapping&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MapEBSSnapshotToDevice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deviceName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snapshotId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sizeInGib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                           &lt;span class=&quot;n&quot;&gt;deleteOnTermination&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MapNewVolumeToDevice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deviceName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sizeInGib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deleteOnTermination&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MapEphemeralDeviceToDevice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deviceName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UnmapDeviceNamed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deviceName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;See also&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jclouds.org/documentation/userguide/using-ec2/&quot;&gt;jclouds EC2 User Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jclouds.org/documentation/faqs/ec2-faq/&quot;&gt;jclouds EC2 FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
   <author>
     <name></name>
     <uri></uri>
   </author>
 </entry>
 
 
 <entry>
   <title>HOW-TO: Demo of webapp deployment on exoscale using Pallet</title>
   <link href="http://palletops.com/pallet/doc/how-tos/pallet-exoscale-demo/"/>
   <updated>2014-02-19T00:00:00+00:00</updated>
   <id>http://palletops.com/pallet/doc/how-tos/pallet-exoscale-demo/</id>
   <content type="html">&lt;p&gt;Deploy a test infrastructure on pallet. This demonstration set can be found on &lt;a href=&quot;https://raw.github.com/exoscale/pallet-exoscale-demo&quot;&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Application:&lt;/h3&gt;

&lt;p&gt;The demo app is a simple yet usefull URL-Shortener. This shortener is a 3 tier application with the following layers:
* Load Balancer: NGINX
* Web Server: Python
* Database Server: Redis&lt;/p&gt;

&lt;p&gt;It will make a store a hash of your long url to a exo.po/XXXXX patern &lt;/p&gt;

&lt;h3&gt;Deployer&lt;/h3&gt;

&lt;p&gt;To make things easier and to hide the pallet magic, we have created a web deployer, 
which is an web application that will control the URL-Shortener deployement and configuration. Once you run the project,
the deployer will be built and present you with the following interface:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://67516654d2ef99c3042d-b9d92f522aee852c07f26ce9d1459c9c.r8.cf1.rackcdn.com/20140617-02/images/exoscale-1.png&quot; alt=&quot;exoscale deployer&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Use Case&lt;/h3&gt;

&lt;p&gt;Once running, you can deploy the URL-Shortener with:
* 1 LB
* 1 WEB
* 1 DB&lt;/p&gt;

&lt;p&gt;Then to scale up for more trafic, you can specify:
* 1 LB
* 3 WEB
* 1 DB&lt;/p&gt;

&lt;p&gt;Pallet will then spawn 2 new webserver instances, intall packages and URL-Shortener code and eventually reconfigure the NGINX 
LB to take in account the 2 new workers.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;root@lb-ac:~# cat /etc/nginx/conf.d/upstream-shorten.conf
upstream shorten {
    server 185.19.28.65:8080;
}

root@lb-ac:~# cat /etc/nginx/conf.d/upstream-shorten.conf
upstream shorten {
    server 185.19.28.83:8080;
    server 185.19.28.86:8080;
    server 185.19.28.65:8080;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;To run the demo, you will need:
* A working JVM environment
* The Leiningen http://leiningen.org/#install
* A valid exoscale account https://portal.exoscale.ch/register&lt;/p&gt;

&lt;h2&gt;Configuration&lt;/h2&gt;

&lt;p&gt;You will need an OpenSSH format RSA key in &lt;code&gt;$HOME/.ssh/id_rsa&lt;/code&gt;.
Add the following in &lt;code&gt;$HOME/.pallet/services/exoscale.clj&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{:exoscale {:provider &amp;quot;exoscale&amp;quot;
            :api-key &amp;quot;&amp;lt;API_KEY&amp;gt;&amp;quot;
            :api-secret &amp;quot;&amp;lt;API_SECRET&amp;gt;&amp;quot;}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Running&lt;/h2&gt;

&lt;p&gt;Simply run &lt;code&gt;lein run&lt;/code&gt; in the project&amp;#39;s directory and point
your browser to http://localhost:8080&lt;/p&gt;
</content>
   <author>
     <name>Antoine Coetsier</name>
     <uri></uri>
   </author>
 </entry>
 
 <entry>
   <title>HOW-TO: How To Use Pallet With Existing Servers</title>
   <link href="http://palletops.com/pallet/doc/how-tos/using-pallet-with-existing-servers/"/>
   <updated>2012-01-26T00:00:00+00:00</updated>
   <id>http://palletops.com/pallet/doc/how-tos/using-pallet-with-existing-servers/</id>
   <content type="html">&lt;p&gt;Pallet has a &lt;a href=&quot;http://palletops.com/pallet/api/0.6/pallet.compute.node-list.html&quot; title=&quot;node-list API&quot;&gt;&lt;code&gt;node-list&lt;/code&gt;&lt;/a&gt; provider, which you can use to connect
pallet to a server rack or to existing virtual machines. To talk to these
servers, you need to tell pallet IP addresses and which group they belong
to. You create a compute service by instantiating a &lt;a href=&quot;http://palletops.com/pallet/api/0.6/pallet.compute.node-list.html&quot; title=&quot;node-list API&quot;&gt;&lt;code&gt;node-list&lt;/code&gt;&lt;/a&gt;
provider with a sequence of nodes to provide that information.&lt;/p&gt;

&lt;h2&gt;Getting a &lt;code&gt;node-list&lt;/code&gt; compute service&lt;/h2&gt;

&lt;p&gt;There are two ways you can obtain a compute service.&lt;/p&gt;

&lt;h3&gt;Instantiate directly&lt;/h3&gt;

&lt;p&gt;The group is used to match nodes to the &lt;a href=&quot;http://palletops.com/doc/reference/node-types&quot; title=&quot;Defining server and group-specs&quot;&gt;&lt;code&gt;group-spec&lt;/code&gt;&lt;/a&gt;s that you use
to define the configuration to apply.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;#39;pallet.compute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;my-data-center&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pallet.compute/instantiate-provider&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;node-list&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:node-list&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;qa&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;fullstack&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;10.11.12.13&amp;quot;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ubuntu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fe&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;tomcats&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;10.11.12.14&amp;quot;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ubuntu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for pallet 0.7 or earlier:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;#39;pallet.compute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;my-data-center&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pallet.compute/compute-service&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;node-list&amp;quot;&lt;/span&gt;
     &lt;span class=&quot;ss&quot;&gt;:node-list&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;qa&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;fullstack&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;10.11.12.13&amp;quot;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ubuntu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fe&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;tomcats&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;10.11.12.14&amp;quot;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ubuntu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Instantiate based on &lt;code&gt;~/.pallet/config.clj&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;If your nodes are fairly static, you may wish to just list them in
&lt;code&gt;~/.pallet/config.clj&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;defpallet&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:services&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:data-center&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:provider&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;node-list&amp;quot;&lt;/span&gt;
                 &lt;span class=&quot;ss&quot;&gt;:node-list&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;qa&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;fullstack&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;10.11.12.13&amp;quot;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ubuntu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                             &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fe&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;tomcats&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;10.11.12.14&amp;quot;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ubuntu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can then obtain the compute service using
&lt;a href=&quot;http://palletops.com/pallet/api/0.6/pallet.configure.html#var-compute-service&quot; title=&quot;pallet.configure/compute-service API doc&quot;&gt;pallet.configure/compute-service&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;#39;pallet.configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;my-data-center&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pallet.configure/compute-service&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:data-center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Assigning Nodes to groups&lt;/h2&gt;

&lt;p&gt;In the &lt;code&gt;:node-list&lt;/code&gt; values above, the first value in each vector is a hostname,
the second value a group name, the third an IP address and the last is the
operating system distribution running on the node.&lt;/p&gt;

&lt;p&gt;The group-name is used to match the nodes to a group-spec (passed to lift, see
below). This allows you to target different commands to different nodes.&lt;/p&gt;

&lt;h2&gt;Specifying the SSH username and credentials&lt;/h2&gt;

&lt;p&gt;Pallet uses SSH to talk to your nodes. The default is to use your local username
and your id_rsa key, and assumes that your account on the nodes has
password-less sudo set up.&lt;/p&gt;

&lt;p&gt;The credentials for ssh are specified using a user map, which can be constructed
using &lt;a href=&quot;http://palletops.com/doc/reference/node-push&quot; title=&quot;Configuring SSH credentials&quot;&gt;&lt;code&gt;pallet.utils/make-user&lt;/code&gt;&lt;/a&gt;. This user map can be passed to
&lt;a href=&quot;http://palletops.com/doc/reference/operations&quot; title=&quot;Lift and Converge&quot;&gt;&lt;code&gt;lift&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Running a command on each node&lt;/h2&gt;

&lt;p&gt;To test your configuration, trying running a simple &lt;code&gt;ls&lt;/code&gt; command.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;#39;pallet.actions&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;#39;pallet.api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pallet.api/lift&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pallet.api/group-spec&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;tomcats&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:phases&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:configure&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pallet.api/plan-fn&lt;/span&gt;
                       &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pallet.actions/exec-script&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))})&lt;/span&gt;
 &lt;span class=&quot;ss&quot;&gt;:compute&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;my-data-center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for pallet 0.7 or earlier:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;#39;pallet.action.exec-script&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;#39;pallet.phase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pallet.core/lift&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pallet.core/group-spec&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;tomcats&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:phases&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:configure&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pallet.phase/phase-fn&lt;/span&gt;
                       &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pallet.action.exec-script/exec-script&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))})&lt;/span&gt;
 &lt;span class=&quot;ss&quot;&gt;:compute&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;my-data-center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
   <author>
     <name>Hugo Duncan</name>
     <uri></uri>
   </author>
 </entry>
 
</feed>
