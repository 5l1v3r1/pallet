#+SETUPFILE: ../org-templates/level-1.org
#+TITLE:     Pallet - Phases
#+DESCRIPTION: Pallet Phases
#+KEYWORDS: pallet phase phases configuration crates

A phase specifies a sequence of crates to be executed.  A phase can be defined
as part of a [[file:node_types.org][node type]], or inline in a [[file:operations.org][=configure= or =lift= invocation]], using
the =phase= macro.

* :bootstrap

The =:bootstrap= phase is applied whenever pallet starts a new node.

* :configure

The =:configue= phase is applied by default by both the =converge= and the
=lift= commands.

* =phase= macro

The =phase= macro can be used to carry out ad-hoc configuration or
administration tasks. In this example we install =curl= on all running =mytag=
nodes.

#+BEGIN_SRC clojure  :session s1
  (require 'pallet.core)
  (require 'pallet.compute)
  (require 'pallet.resource)
  (require 'pallet.resource.package)

  (def service (pallet.compute/compute-service-from-config-file))
  (pallet.core/defnode mytag {})
  (pallet.core/lift mytag :compute service
    :phase (pallet.resource/phase (pallet.resource.package/package "curl")))
#+END_SRC

