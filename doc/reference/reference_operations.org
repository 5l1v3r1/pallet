#+SETUPFILE: ../org-templates/level-1.org
#+TITLE:     Pallet Reference - Operations
#+DESCRIPTION: Pallet reference for converge and lift operations
#+KEYWORDS: pallet reference documentation lift converge

* Converge

The =converge= function can be used to adjust node counts and to apply phases.
The =:bootstrap= phase is the first phase applied to any new node that is
started, and =:configure= is always applied.  Additional phases may also be
specified. If the =:configure= phase is not explicitly passed, then it will
always be applied as the first phase (or second, after =:bootstrap= on new
nodes).

#+BEGIN_SRC clojure  :session s1
  (require 'pallet.core)
  (pallet.core/defnode mytag {})

  (defn scale-cluster [n]
    (pallet.core/converge {mytag n}))
#+END_SRC

=converge= also accepts a prefix, which is applied to the tags in the call.
This can be used to build job specific clusters.

#+BEGIN_SRC clojure  :session s1
  (require 'pallet.core)
  (pallet.core/defnode lb {})
  (pallet.core/defnode webapp {})
  (pallet.core/defnode db {})

  (defn scale-cluster [prefix n]
    (pallet.core/converge {lb 1 webapp n db (inc (/ n 2))} :prefix prefix))
#+END_SRC

* Lift

The =lift= function is used to apply phases. The :configure phase is run by
default only if no phases are explicitly specified.

